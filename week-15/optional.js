// ### Optional üåü

// **Optional: Find Mode**

// - ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô Function ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ `findMode` ‡∏ã‡∏∂‡πà‡∏á‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ
//     - ‡∏£‡∏±‡∏ö Parameter 1 ‡∏ï‡∏±‡∏ß‡∏Ñ‡∏∑‡∏≠ `arr` ‡πÄ‡∏õ‡πá‡∏ô Array ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
//     - Function ‡∏ô‡∏µ‡πâ‡∏à‡∏∞ Return ‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î (mode) ‡πÉ‡∏ô Array
//         - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ñ‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡πÉ‡∏´‡πâ return ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ô Array
//     - ‡πÄ‡∏ä‡πà‡∏ô

function findMode(arr) {
    //Start Coding Here
    let countarr = {};
    for (let i = 0; i < arr.length; i++) {
        let num = arr[i]
        let count = Number(countarr[arr[i]]) || 0
        countarr = {
            ...countarr,
            [num]: ++count
        }
    }

    let result = 0
    let resultCount = 0
    for (let count in countarr) {
        if (countarr[count] > resultCount) {
            result = count
            resultCount = countarr[count]
        }
        else if (resultCount == countarr[count]) {
            for (let i = 0; i < arr.length; i++) {
                if (arr[i] == countarr[count]) {
                    result = count
                    resultCount = countarr[count]
                    break;
                }
            }
        }
    }
    return result
};

let result1 = findMode([1, 2, 2, 3, 3, 3, 4]);
console.log(result1); // 3

let result2 = findMode([7, 7, 1, 1, 7]);
console.log(result2); // 7

let result3 = findMode([7, 7, 1, 1, 7, 1, 1]);
console.log(result3); // 7